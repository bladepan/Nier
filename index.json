{
  "index.html": {
    "href": "index.html",
    "title": "Nier.Commons | Nier.Commons",
    "keywords": "Nier.Commons Placeholder for docfx"
  },
  "README.html": {
    "href": "README.html",
    "title": "Nier.Commons | Nier.Commons",
    "keywords": "Nier.Commons Dotnet utility classes usually end up in folders named like \"Utilities\", \"Utils\", \"Extensions\" or \"Commons\" in various projects. This project intends to provide a set of core libraries for dotnet. It is similar to Apache Commons and Guava for Java projects. Many classes and methods are ported from these 2 projects. There are also code written to address the needs specific to dotnet projects as well. Install Nuget API Doc API doc Nier.Commons Utility classes for dotnet runtime core types. ISystemClock/SystemClock - Abstraction of system clock. Extensions.ObjectExtensions Extensions.StringExtensions Nier.Commons.Collections Utility classes for Collections. Extensions.DictionaryExtensions Extensions.EnumerableExtensions Notable features Readable ToString for Collections. ToString methods in Collection types in dotnet does not have collection values. ToReadableString methods in extension classes creates string with collection values."
  },
  "api/Nier.Commons.Extensions.ToStringBuilder.html": {
    "href": "api/Nier.Commons.Extensions.ToStringBuilder.html",
    "title": "Class ToStringBuilder | Nier.Commons",
    "keywords": "Class ToStringBuilder NotThreadSafe. A helper class to implement ToString methods. Inheritance System.Object ToStringBuilder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Extensions Assembly : cs.temp.dll.dll Syntax public class ToStringBuilder Methods Add<T>(String, T) Add a value to the builder. Declaration public ToStringBuilder Add<T>(string key, T value) Parameters Type Name Description System.String key T value Returns Type Description ToStringBuilder Type Parameters Name Description T Exceptions Type Condition System.ArgumentException The key is null or empty. OmitNullValues() Skip null values in ToString. Declaration public ToStringBuilder OmitNullValues() Returns Type Description ToStringBuilder The ToStringBuilder itself. ToString() Return a string specified by this builder. Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Nier.Commons.Collections.Extensions.ReadOnlyDictionaryExtensions.html": {
    "href": "api/Nier.Commons.Collections.Extensions.ReadOnlyDictionaryExtensions.html",
    "title": "Class ReadOnlyDictionaryExtensions | Nier.Commons",
    "keywords": "Class ReadOnlyDictionaryExtensions Inheritance System.Object ReadOnlyDictionaryExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Collections.Extensions Assembly : cs.temp.dll.dll Syntax public static class ReadOnlyDictionaryExtensions"
  },
  "api/Nier.Commons.html": {
    "href": "api/Nier.Commons.html",
    "title": "Namespace Nier.Commons | Nier.Commons",
    "keywords": "Namespace Nier.Commons Classes SystemClock Implementation of ISystemClock that uses real system clock. Interfaces ISystemClock Abstracts the system clock to facilitate testing."
  },
  "api/Nier.Commons.Extensions.html": {
    "href": "api/Nier.Commons.Extensions.html",
    "title": "Namespace Nier.Commons.Extensions | Nier.Commons",
    "keywords": "Namespace Nier.Commons.Extensions Classes ObjectExtensions Utility methods for System.Object type. StringExtensions Utility methods of System.String type. ToStringBuilder NotThreadSafe. A helper class to implement ToString methods."
  },
  "api/Nier.Commons.Collections.html": {
    "href": "api/Nier.Commons.Collections.html",
    "title": "Namespace Nier.Commons.Collections | Nier.Commons",
    "keywords": "Namespace Nier.Commons.Collections Interfaces IDictionaryDifference<TKey, TVal> Describe the difference between 2 dictionaries. IDictionaryValueDifference<TVal> Describe the difference with 2 dictionary values"
  },
  "api/Nier.Commons.Collections.Extensions.DictionaryExtensions.html": {
    "href": "api/Nier.Commons.Collections.Extensions.DictionaryExtensions.html",
    "title": "Class DictionaryExtensions | Nier.Commons",
    "keywords": "Class DictionaryExtensions Utility methods for and type. Methods deal with IReadOnlyDictionary have \"ReadOnly\" prefix or suffix. This is because types like implements both interfaces, it will create ambiguous reference if the same name is used. Inheritance System.Object DictionaryExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Collections.Extensions Assembly : cs.temp.dll.dll Syntax public static class DictionaryExtensions Methods GetDifference<TKey, TVal>(IDictionary<TKey, TVal>, IDictionary<TKey, TVal>) Get difference of this dictionary (left) to another (right). Declaration public static IDictionaryDifference<TKey, TVal> GetDifference<TKey, TVal>(this IDictionary<TKey, TVal> left, IDictionary<TKey, TVal> right) Parameters Type Name Description IDictionary <TKey, TVal> left The left dictionary. can be null. IDictionary <TKey, TVal> right The right dictionary. can be null. Returns Type Description IDictionaryDifference <TKey, TVal> The difference between 2 dictionaries Type Parameters Name Description TKey Type of the dictionary keys TVal Type of the dictionary values IsEmpty<TKey, TVal>(IDictionaryDifference<TKey, TVal>) If the difference object represents any difference between 2 dictionaries. Declaration public static bool IsEmpty<TKey, TVal>(this IDictionaryDifference<TKey, TVal> difference) Parameters Type Name Description IDictionaryDifference <TKey, TVal> difference Returns Type Description System.Boolean Type Parameters Name Description TKey TVal Exceptions Type Condition System.ArgumentNullException the difference object is null IsEquivalentTo<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>) has the same key value pairs as , or they are both null/empty. Declaration public static bool IsEquivalentTo<TKey, TValue>(this IDictionary<TKey, TValue> dict1, IDictionary<TKey, TValue> dict2) Parameters Type Name Description IDictionary <TKey, TValue> dict1 can be null IDictionary <TKey, TValue> dict2 can be null Returns Type Description System.Boolean Type Parameters Name Description TKey TValue IsEquivalentToReadonly<TKey, TValue>(IDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue>) Same as IsEquivalentTo<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>) , but compares IDictionary with IReadOnlyDictionary. Declaration public static bool IsEquivalentToReadonly<TKey, TValue>(this IDictionary<TKey, TValue> dict1, IReadOnlyDictionary<TKey, TValue> dict2) Parameters Type Name Description IDictionary <TKey, TValue> dict1 IReadOnlyDictionary <TKey, TValue> dict2 Returns Type Description System.Boolean Type Parameters Name Description TKey TValue ReadOnlyGetDifference<TKey, TVal>(IReadOnlyDictionary<TKey, TVal>, IReadOnlyDictionary<TKey, TVal>) Same as GetDifference<TKey, TVal>(IDictionary<TKey, TVal>, IDictionary<TKey, TVal>) , for IReadOnlyDictionary types. Declaration public static IDictionaryDifference<TKey, TVal> ReadOnlyGetDifference<TKey, TVal>(this IReadOnlyDictionary<TKey, TVal> left, IReadOnlyDictionary<TKey, TVal> right) Parameters Type Name Description IReadOnlyDictionary <TKey, TVal> left IReadOnlyDictionary <TKey, TVal> right Returns Type Description IDictionaryDifference <TKey, TVal> Type Parameters Name Description TKey TVal ReadOnlyIsEquivalentTo<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue>) same as IsEquivalentTo<TKey, TValue>(IDictionary<TKey, TValue>, IDictionary<TKey, TValue>) , but for IReadOnlyDictionary types. Declaration public static bool ReadOnlyIsEquivalentTo<TKey, TValue>(this IReadOnlyDictionary<TKey, TValue> dict1, IReadOnlyDictionary<TKey, TValue> dict2) Parameters Type Name Description IReadOnlyDictionary <TKey, TValue> dict1 IReadOnlyDictionary <TKey, TValue> dict2 Returns Type Description System.Boolean Type Parameters Name Description TKey TValue ToReadableString<TKey, TValue>(IDictionary<TKey, TValue>) Readable string representation contains key values of a dictionary. Declaration public static string ToReadableString<TKey, TValue>(this IDictionary<TKey, TValue> dict) Parameters Type Name Description IDictionary <TKey, TValue> dict dictionary, can be null. Returns Type Description System.String readable string representation of the dictionary Type Parameters Name Description TKey type of key TValue type of value"
  },
  "api/Nier.Commons.Collections.IDictionaryValueDifference-1.html": {
    "href": "api/Nier.Commons.Collections.IDictionaryValueDifference-1.html",
    "title": "Interface IDictionaryValueDifference<TVal> | Nier.Commons",
    "keywords": "Interface IDictionaryValueDifference<TVal> Describe the difference with 2 dictionary values Namespace : Nier.Commons.Collections Assembly : cs.temp.dll.dll Syntax public interface IDictionaryValueDifference<TVal> Type Parameters Name Description TVal Type of value Properties LeftValue Declaration TVal LeftValue { get; } Property Value Type Description TVal RightValue Declaration TVal RightValue { get; } Property Value Type Description TVal"
  },
  "api/Nier.Commons.Extensions.StringExtensions.html": {
    "href": "api/Nier.Commons.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Nier.Commons",
    "keywords": "Class StringExtensions Utility methods of System.String type. Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Extensions Assembly : cs.temp.dll.dll Syntax public static class StringExtensions Methods Abbreviate(String, Int32) Abbreviates a String using ellipses. This will turn \"Now is the time for all good men\" into \"Now is the time for...\" Declaration public static string Abbreviate(this string str, int maxWidth) Parameters Type Name Description System.String str System.Int32 maxWidth Returns Type Description System.String Abbreviate(String, String, Int32) Abbreviates a String using another given String as replacement marker. This will turn \"Now is the time for all good men\" into \"Now is the time for...\" if \"...\" was defined as the replacement marker. Declaration public static string Abbreviate(this string str, string abbrevMarker, int maxWidth) Parameters Type Name Description System.String str System.String abbrevMarker System.Int32 maxWidth Returns Type Description System.String Abbreviate(String, String, Int32, Int32) Abbreviates a String using a given replacement marker. This will turn Now is the time for all good men\" into \"...is the time for...\" if \"...\" was defined as the replacement marker. StringExtensions.Abbreviate(null, \".\", 0, 3) -> null StringExtensions.Abbreviate(\"\", \".\", 0, 3) -> \"\" StringExtensions.Abbreviate(\"abc\", \".\", 0, 3) -> \"abc\" StringExtensions.Abbreviate(\"abc\", \".\", 0, 2) -> \"ab.\" StringExtensions.Abbreviate(\"abcdefg\", \"..\", 3, 5) -> \"..d..\" StringExtensions.Abbreviate(\"abcdefg\", \"..\", 3, 2) -> ArgumentException StringExtensions.Abbreviate(\"abcdefg\", \"..\", -1, 5) -> ArgumentException Declaration public static string Abbreviate(this string str, string abbrevMarker, int offset, int maxWidth) Parameters Type Name Description System.String str the string to check, can be null System.String abbrevMarker the string used as replacement marker System.Int32 offset the character on the offset is guaranteed to be kept in the result string. if offset is greater than abbrevMarker length, the characters on the left of offset will be abbreviated in result. System.Int32 maxWidth maximum length of the result string Returns Type Description System.String Abbreviated string Exceptions Type Condition System.ArgumentException offset less than 0, maxWidth less or equal to abbrevMarker length AbbreviateMiddle(String, String, Int32) Abbreviates a string to the length passed, replacing the middle characters with the supplied replacement string. The abbreviation happens when the string length is greater than the maxWidth. Otherwise, the original string is returned. Declaration public static string AbbreviateMiddle(this string str, string abbrevMarker, int maxWidth) Parameters Type Name Description System.String str the string to be abbreviated, can be null System.String abbrevMarker the string to replace the middle characters with System.Int32 maxWidth maximum length of result string Returns Type Description System.String the abbreviated string if abbreviation is necessary, or the original string supplied for abbreviation AppendIfMissing(String, String, StringComparison) Appends the suffix to the end of the string if the string does not already end with the suffix. Declaration public static string AppendIfMissing(this string str, string suffix, StringComparison stringComparison) Parameters Type Name Description System.String str The string, can be null System.String suffix The suffix to append to the end of the string. System.StringComparison stringComparison String comparison used to find suffix Returns Type Description System.String Center(String, Int32, Char) Centers a string in a larger string of size size. Uses a supplied character as the value to pad the string with. Declaration public static string Center(this string str, int size, char padChar = ' ') Parameters Type Name Description System.String str System.Int32 size System.Char padChar Returns Type Description System.String PadEnd(String, Int32, Char) Right pad a string with a specified character. The string is padded to the size of size. Declaration public static string PadEnd(this string str, int size, char padChar = ' ') Parameters Type Name Description System.String str System.Int32 size System.Char padChar Returns Type Description System.String PadStart(String, Int32, Char) Left pad a string with a specified character. The string is padded to the size of size. Declaration public static string PadStart(this string str, int size, char padChar = ' ') Parameters Type Name Description System.String str System.Int32 size System.Char padChar Returns Type Description System.String SubStringBetween(String, String, String) Gets the String that is nested in between two Strings. Only the first match is returned. Uses StringComparison.Ordinal for string comparison. A null input String returns null. A null open/close returns null (no match). An empty (\"\") open and close returns an empty string. StringExtensions.SubStringBetween(null, \"a\", \"a\") -> null Declaration public static string SubStringBetween(this string str, string open, string close) Parameters Type Name Description System.String str the String containing the substring, may be null System.String open the String before the substring, may be null System.String close the String after the substring, may be null Returns Type Description System.String the substring, null if no match"
  },
  "api/Nier.Commons.Collections.Extensions.EnumerableExtensions.html": {
    "href": "api/Nier.Commons.Collections.Extensions.EnumerableExtensions.html",
    "title": "Class EnumerableExtensions | Nier.Commons",
    "keywords": "Class EnumerableExtensions Utility methods for type. Inheritance System.Object EnumerableExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Collections.Extensions Assembly : cs.temp.dll.dll Syntax public static class EnumerableExtensions Methods SafeToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>) A variation of SafeToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) that returns the elements from the source as dictionary values. Declaration public static IDictionary<TKey, TSource> SafeToDictionary<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer = null) Parameters Type Name Description IEnumerable <TSource> source System.Func <TSource, TKey> keySelector IEqualityComparer <TKey> comparer Returns Type Description IDictionary <TKey, TSource> Type Parameters Name Description TSource TKey SafeToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>) Same as Linq's ToDictionary except it does not throw exception when keySelector generates duplicate keys. The new key value pair generated overrides the old one. Declaration public static IDictionary<TKey, TElement> SafeToDictionary<TSource, TKey, TElement>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer = null) Parameters Type Name Description IEnumerable <TSource> source the data source, can be null System.Func <TSource, TKey> keySelector System.Func <TSource, TElement> elementSelector IEqualityComparer <TKey> comparer Returns Type Description IDictionary <TKey, TElement> Type Parameters Name Description TSource TKey TElement Exceptions Type Condition System.ArgumentNullException keySelector or elementSelector is null ToReadableString<T>(IEnumerable<T>) Readable string representation of a IEnumerable object with all the values. Declaration public static string ToReadableString<T>(this IEnumerable<T> enumerable) Parameters Type Name Description IEnumerable <T> enumerable Returns Type Description System.String Readable string Type Parameters Name Description T"
  },
  "api/Nier.Commons.ISystemClock.html": {
    "href": "api/Nier.Commons.ISystemClock.html",
    "title": "Interface ISystemClock | Nier.Commons",
    "keywords": "Interface ISystemClock Abstracts the system clock to facilitate testing. Namespace : Nier.Commons Assembly : cs.temp.dll.dll Syntax public interface ISystemClock Properties UtcNow Retrieves the current system time in UTC. Declaration DateTimeOffset UtcNow { get; } Property Value Type Description System.DateTimeOffset"
  },
  "api/Nier.Commons.Collections.Extensions.html": {
    "href": "api/Nier.Commons.Collections.Extensions.html",
    "title": "Namespace Nier.Commons.Collections.Extensions | Nier.Commons",
    "keywords": "Namespace Nier.Commons.Collections.Extensions Classes DictionaryExtensions Utility methods for and type. Methods deal with IReadOnlyDictionary have \"ReadOnly\" prefix or suffix. This is because types like implements both interfaces, it will create ambiguous reference if the same name is used. EnumerableExtensions Utility methods for type. ReadOnlyDictionaryExtensions"
  },
  "api/Nier.Commons.Extensions.ObjectExtensions.html": {
    "href": "api/Nier.Commons.Extensions.ObjectExtensions.html",
    "title": "Class ObjectExtensions | Nier.Commons",
    "keywords": "Class ObjectExtensions Utility methods for System.Object type. Inheritance System.Object ObjectExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons.Extensions Assembly : cs.temp.dll.dll Syntax public static class ObjectExtensions Methods ToStringBuilder(Object) Create a ToStringBuilder instance. Declaration public static ToStringBuilder ToStringBuilder(this object obj) Parameters Type Name Description System.Object obj Returns Type Description ToStringBuilder Exceptions Type Condition System.ArgumentNullException obj is null ToStringBuilder(String) Create a ToStringBuilder instance. Declaration public static ToStringBuilder ToStringBuilder(string className) Parameters Type Name Description System.String className Returns Type Description ToStringBuilder Exceptions Type Condition System.ArgumentNullException"
  },
  "api/Nier.Commons.Collections.IDictionaryDifference-2.html": {
    "href": "api/Nier.Commons.Collections.IDictionaryDifference-2.html",
    "title": "Interface IDictionaryDifference<TKey, TVal> | Nier.Commons",
    "keywords": "Interface IDictionaryDifference<TKey, TVal> Describe the difference between 2 dictionaries. Namespace : Nier.Commons.Collections Assembly : cs.temp.dll.dll Syntax public interface IDictionaryDifference<TKey, TVal> Type Parameters Name Description TKey Type of dictionary keys TVal Type of dictionary values Properties EntriesDiffering Entries with keys that appear on both dictionaries with different values Declaration IReadOnlyDictionary<TKey, IDictionaryValueDifference<TVal>> EntriesDiffering { get; } Property Value Type Description IReadOnlyDictionary <TKey, IDictionaryValueDifference <TVal>> EntriesInCommon Entries with keys that appear on both dictionaries with equal values Declaration IReadOnlyDictionary<TKey, TVal> EntriesInCommon { get; } Property Value Type Description IReadOnlyDictionary <TKey, TVal> EntriesOnlyOnLeft Entries that only appear on the left dictionary Declaration IReadOnlyDictionary<TKey, TVal> EntriesOnlyOnLeft { get; } Property Value Type Description IReadOnlyDictionary <TKey, TVal> EntriesOnlyOnRight Entries that only appear on the right dictionary Declaration IReadOnlyDictionary<TKey, TVal> EntriesOnlyOnRight { get; } Property Value Type Description IReadOnlyDictionary <TKey, TVal>"
  },
  "api/Nier.Commons.SystemClock.html": {
    "href": "api/Nier.Commons.SystemClock.html",
    "title": "Class SystemClock | Nier.Commons",
    "keywords": "Class SystemClock Implementation of ISystemClock that uses real system clock. Inheritance System.Object SystemClock Implements ISystemClock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ToString() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Nier.Commons Assembly : cs.temp.dll.dll Syntax public class SystemClock : ISystemClock Properties UtcNow Declaration public DateTimeOffset UtcNow { get; } Property Value Type Description System.DateTimeOffset Implements ISystemClock"
  }
}